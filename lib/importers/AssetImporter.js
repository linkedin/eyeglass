"use strict";

var packageUtils = require("../util/package");
var ImportUtilities = require("./ImportUtilities");
var EyeglassModule = require("../modules/EyeglassModule");
var URI = require("../util/URI");
var fileUtils = require("../util/files");

// import pattern matches `assets` and `foo/assets`, but not `foo/bar/assets`
var rAssetsImport = /^(?:([^\/]+)\/)?assets$/;

function AssetImporter(eyeglass, sass, options, fallbackImporter) {

  return ImportUtilities.createImporter(function(uri, prev, done) {
    var importUtils = new ImportUtilities(eyeglass, sass, options, fallbackImporter, this);

    var isRealFile = fileUtils.existsSync(prev);
    var mod;

    function importAssetsFor(mod) {
      importUtils.importOnce({
        contents: mod.assets.asAssetImport(mod.name),
        file: "autoGenerated:" + URI.join(mod.name, "assets")
      }, done);
    }

    var isRelativeImport = URI.isRelative(uri);
    var assetsImport = !isRelativeImport && rAssetsImport.exec(uri);
    // the first fragment of the match is the module name
    var moduleName = assetsImport && assetsImport[1];

    // if it's not an assets import, or it's `eyeglass/assets`,
    //  just use the fallback importer
    if (!assetsImport) {
      importUtils.fallback(uri, prev, done, function() {
        done(sass.NULL);
      });
    } else {
      // if the module name wasn't specified in the import,
      //  infer it from the origin
      if (!moduleName && isRealFile) {
        var pkg = packageUtils.findNearestPackage(prev);
        mod = new EyeglassModule({
          path: pkg
        });

        // if it's an eyeglass module...
        if (mod.isEyeglassModule) {
          // use the module's name
          moduleName = mod.name;
        }
      }

      // if we have a module name...
      if (moduleName) {
        // try to access the module
        mod = eyeglass.modules.access(moduleName, isRealFile ? prev : options.eyeglass.root);
        // if we can access it...
        if (mod) {
          /* eslint max-depth:0 */
          // if it has assets...
          if (mod.assets) {
            // import them
            importAssetsFor(mod);
          } else {
            // otherwise throw an error
            done(new Error("No assets specified for eyeglass plugin " + mod.name));
          }
        } else {
          // if we can't find/access it, throw an error
          done(new Error("No eyeglass plugin named: " + moduleName));
        }
      } else {
        // otherwise, import the app assets
        importAssetsFor(eyeglass);
      }
    }
  });
}

module.exports = AssetImporter;
